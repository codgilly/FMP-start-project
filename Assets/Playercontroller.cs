//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Playercontroller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Playercontroller: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Playercontroller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Playercontroller"",
    ""maps"": [
        {
            ""name"": ""Charactercontrols"",
            ""id"": ""f4e77dc8-c36f-49af-bb05-18da376952f5"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""1a19cab8-cb8d-4a93-9f60-e8403b851269"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""f51652ef-72ed-4d23-8667-7497d5b949ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Button"",
                    ""id"": ""acdc628f-229b-42be-acac-f531b946ed8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""09937be4-5368-4cae-9a51-dc8328e8adce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""ec73dec1-4c05-4f43-9cf6-409f091ba865"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1d89d53b-61f6-4688-ad6e-78f1aebb0e3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""3a1c182f-bdb3-4e97-9e85-a283df63555f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drink"",
                    ""type"": ""Button"",
                    ""id"": ""a0bbfbe6-7731-4756-bb42-205ce05df52b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b32a6235-866d-482e-b267-6273a2f46cdb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scream"",
                    ""type"": ""Button"",
                    ""id"": ""1dd0aec6-fc2a-47ba-857e-3922db485b31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Puase"",
                    ""type"": ""Button"",
                    ""id"": ""ecb9d462-f382-4945-a290-5a8f285110ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""946ade29-18e0-4d28-a511-020569142fbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip"",
                    ""type"": ""Button"",
                    ""id"": ""98647e45-7413-4e99-9b77-30b6088a0fda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnEquip"",
                    ""type"": ""Button"",
                    ""id"": ""eca811ba-a629-4083-a08d-64dbd9acf46b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""e7b52dee-3dab-41fa-b53a-defb47ff0a89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""menuUp"",
                    ""type"": ""Button"",
                    ""id"": ""3caa5d67-9b34-49fc-a599-e7d1d007ad9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuLeft"",
                    ""type"": ""Button"",
                    ""id"": ""45f0dd67-f8c9-48a8-b2a3-519e1ea28fb7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuRight"",
                    ""type"": ""Button"",
                    ""id"": ""2179d827-d0df-4fe7-89d7-06b8289bbd73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuDown"",
                    ""type"": ""Button"",
                    ""id"": ""a661487e-3268-4906-9daf-dcd7b4eaf3f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""00da7793-f7b8-410b-8df6-37c330ac1e4d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3107744-9c6a-4b45-8f58-f28581f95d59"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e8f5377-36ca-4b26-b752-fe5389021e40"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8dd2f3cb-1a64-4c8a-b240-0ef142ed44bb"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f695c5f5-8abf-4795-84c8-11900ca9c902"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e22590df-5277-44bb-a83a-481f6d14c6da"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""947155da-f2f6-4977-85e7-a62dfac7c127"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af71c8cd-e851-435e-89ef-b98e4b25279c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e393aca-3ce9-4e86-90fb-4a700f3e0e1c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""396c1cff-ecd3-4bf3-8a65-ad11818b5904"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61b58699-cf77-4979-a8f7-f4203a4d1745"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scream"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a15e462-5f9e-4ab9-9537-445149d385f7"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Puase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f683486c-d50c-44d0-8b89-e7f6c98a9c72"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Puase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c833bd57-6c4f-4eec-a937-c5ddb2d79797"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c942f16c-23da-4206-9148-cbf5ea9c593c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ac921ab-d4c3-4988-b485-8c077e5b857a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnEquip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""008f33ac-393e-4b63-9fa6-8657fa950443"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""300f4635-d558-4e80-8ed9-a53a89ecb059"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""menuUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd5dc997-14ae-478c-aa5e-0adea2f394b2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51d3575b-2070-4f27-88d1-d6f28f01b558"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f9fe317-b531-45b0-b5c2-8f69dfa43f31"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""d5857ce3-c58b-4422-9c6d-901433519ae3"",
            ""actions"": [
                {
                    ""name"": ""Navigation"",
                    ""type"": ""Value"",
                    ""id"": ""68004978-2bbe-4e2c-a618-358f5b751fb0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""4b37b79f-45de-4348-ba3a-a929a769cd57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c6f2fef9-ca54-48f0-a944-793e5d83e259"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad4f03d6-23b2-49b8-8fbf-61fdbe314575"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ff027d2-1105-4ee7-9a70-3df684fe8f1f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Charactercontrols
        m_Charactercontrols = asset.FindActionMap("Charactercontrols", throwIfNotFound: true);
        m_Charactercontrols_Movement = m_Charactercontrols.FindAction("Movement", throwIfNotFound: true);
        m_Charactercontrols_Run = m_Charactercontrols.FindAction("Run", throwIfNotFound: true);
        m_Charactercontrols_Camera = m_Charactercontrols.FindAction("Camera", throwIfNotFound: true);
        m_Charactercontrols_Block = m_Charactercontrols.FindAction("Block", throwIfNotFound: true);
        m_Charactercontrols_Roll = m_Charactercontrols.FindAction("Roll", throwIfNotFound: true);
        m_Charactercontrols_LightAttack = m_Charactercontrols.FindAction("LightAttack", throwIfNotFound: true);
        m_Charactercontrols_HeavyAttack = m_Charactercontrols.FindAction("HeavyAttack", throwIfNotFound: true);
        m_Charactercontrols_Drink = m_Charactercontrols.FindAction("Drink", throwIfNotFound: true);
        m_Charactercontrols_Jump = m_Charactercontrols.FindAction("Jump", throwIfNotFound: true);
        m_Charactercontrols_Scream = m_Charactercontrols.FindAction("Scream", throwIfNotFound: true);
        m_Charactercontrols_Puase = m_Charactercontrols.FindAction("Puase", throwIfNotFound: true);
        m_Charactercontrols_Interact = m_Charactercontrols.FindAction("Interact", throwIfNotFound: true);
        m_Charactercontrols_Equip = m_Charactercontrols.FindAction("Equip", throwIfNotFound: true);
        m_Charactercontrols_UnEquip = m_Charactercontrols.FindAction("UnEquip", throwIfNotFound: true);
        m_Charactercontrols_LockOn = m_Charactercontrols.FindAction("LockOn", throwIfNotFound: true);
        m_Charactercontrols_menuUp = m_Charactercontrols.FindAction("menuUp", throwIfNotFound: true);
        m_Charactercontrols_MenuLeft = m_Charactercontrols.FindAction("MenuLeft", throwIfNotFound: true);
        m_Charactercontrols_MenuRight = m_Charactercontrols.FindAction("MenuRight", throwIfNotFound: true);
        m_Charactercontrols_MenuDown = m_Charactercontrols.FindAction("MenuDown", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigation = m_UI.FindAction("Navigation", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Charactercontrols
    private readonly InputActionMap m_Charactercontrols;
    private List<ICharactercontrolsActions> m_CharactercontrolsActionsCallbackInterfaces = new List<ICharactercontrolsActions>();
    private readonly InputAction m_Charactercontrols_Movement;
    private readonly InputAction m_Charactercontrols_Run;
    private readonly InputAction m_Charactercontrols_Camera;
    private readonly InputAction m_Charactercontrols_Block;
    private readonly InputAction m_Charactercontrols_Roll;
    private readonly InputAction m_Charactercontrols_LightAttack;
    private readonly InputAction m_Charactercontrols_HeavyAttack;
    private readonly InputAction m_Charactercontrols_Drink;
    private readonly InputAction m_Charactercontrols_Jump;
    private readonly InputAction m_Charactercontrols_Scream;
    private readonly InputAction m_Charactercontrols_Puase;
    private readonly InputAction m_Charactercontrols_Interact;
    private readonly InputAction m_Charactercontrols_Equip;
    private readonly InputAction m_Charactercontrols_UnEquip;
    private readonly InputAction m_Charactercontrols_LockOn;
    private readonly InputAction m_Charactercontrols_menuUp;
    private readonly InputAction m_Charactercontrols_MenuLeft;
    private readonly InputAction m_Charactercontrols_MenuRight;
    private readonly InputAction m_Charactercontrols_MenuDown;
    public struct CharactercontrolsActions
    {
        private @Playercontroller m_Wrapper;
        public CharactercontrolsActions(@Playercontroller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Charactercontrols_Movement;
        public InputAction @Run => m_Wrapper.m_Charactercontrols_Run;
        public InputAction @Camera => m_Wrapper.m_Charactercontrols_Camera;
        public InputAction @Block => m_Wrapper.m_Charactercontrols_Block;
        public InputAction @Roll => m_Wrapper.m_Charactercontrols_Roll;
        public InputAction @LightAttack => m_Wrapper.m_Charactercontrols_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_Charactercontrols_HeavyAttack;
        public InputAction @Drink => m_Wrapper.m_Charactercontrols_Drink;
        public InputAction @Jump => m_Wrapper.m_Charactercontrols_Jump;
        public InputAction @Scream => m_Wrapper.m_Charactercontrols_Scream;
        public InputAction @Puase => m_Wrapper.m_Charactercontrols_Puase;
        public InputAction @Interact => m_Wrapper.m_Charactercontrols_Interact;
        public InputAction @Equip => m_Wrapper.m_Charactercontrols_Equip;
        public InputAction @UnEquip => m_Wrapper.m_Charactercontrols_UnEquip;
        public InputAction @LockOn => m_Wrapper.m_Charactercontrols_LockOn;
        public InputAction @menuUp => m_Wrapper.m_Charactercontrols_menuUp;
        public InputAction @MenuLeft => m_Wrapper.m_Charactercontrols_MenuLeft;
        public InputAction @MenuRight => m_Wrapper.m_Charactercontrols_MenuRight;
        public InputAction @MenuDown => m_Wrapper.m_Charactercontrols_MenuDown;
        public InputActionMap Get() { return m_Wrapper.m_Charactercontrols; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharactercontrolsActions set) { return set.Get(); }
        public void AddCallbacks(ICharactercontrolsActions instance)
        {
            if (instance == null || m_Wrapper.m_CharactercontrolsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharactercontrolsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @Drink.started += instance.OnDrink;
            @Drink.performed += instance.OnDrink;
            @Drink.canceled += instance.OnDrink;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Scream.started += instance.OnScream;
            @Scream.performed += instance.OnScream;
            @Scream.canceled += instance.OnScream;
            @Puase.started += instance.OnPuase;
            @Puase.performed += instance.OnPuase;
            @Puase.canceled += instance.OnPuase;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Equip.started += instance.OnEquip;
            @Equip.performed += instance.OnEquip;
            @Equip.canceled += instance.OnEquip;
            @UnEquip.started += instance.OnUnEquip;
            @UnEquip.performed += instance.OnUnEquip;
            @UnEquip.canceled += instance.OnUnEquip;
            @LockOn.started += instance.OnLockOn;
            @LockOn.performed += instance.OnLockOn;
            @LockOn.canceled += instance.OnLockOn;
            @menuUp.started += instance.OnMenuUp;
            @menuUp.performed += instance.OnMenuUp;
            @menuUp.canceled += instance.OnMenuUp;
            @MenuLeft.started += instance.OnMenuLeft;
            @MenuLeft.performed += instance.OnMenuLeft;
            @MenuLeft.canceled += instance.OnMenuLeft;
            @MenuRight.started += instance.OnMenuRight;
            @MenuRight.performed += instance.OnMenuRight;
            @MenuRight.canceled += instance.OnMenuRight;
            @MenuDown.started += instance.OnMenuDown;
            @MenuDown.performed += instance.OnMenuDown;
            @MenuDown.canceled += instance.OnMenuDown;
        }

        private void UnregisterCallbacks(ICharactercontrolsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @Drink.started -= instance.OnDrink;
            @Drink.performed -= instance.OnDrink;
            @Drink.canceled -= instance.OnDrink;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Scream.started -= instance.OnScream;
            @Scream.performed -= instance.OnScream;
            @Scream.canceled -= instance.OnScream;
            @Puase.started -= instance.OnPuase;
            @Puase.performed -= instance.OnPuase;
            @Puase.canceled -= instance.OnPuase;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Equip.started -= instance.OnEquip;
            @Equip.performed -= instance.OnEquip;
            @Equip.canceled -= instance.OnEquip;
            @UnEquip.started -= instance.OnUnEquip;
            @UnEquip.performed -= instance.OnUnEquip;
            @UnEquip.canceled -= instance.OnUnEquip;
            @LockOn.started -= instance.OnLockOn;
            @LockOn.performed -= instance.OnLockOn;
            @LockOn.canceled -= instance.OnLockOn;
            @menuUp.started -= instance.OnMenuUp;
            @menuUp.performed -= instance.OnMenuUp;
            @menuUp.canceled -= instance.OnMenuUp;
            @MenuLeft.started -= instance.OnMenuLeft;
            @MenuLeft.performed -= instance.OnMenuLeft;
            @MenuLeft.canceled -= instance.OnMenuLeft;
            @MenuRight.started -= instance.OnMenuRight;
            @MenuRight.performed -= instance.OnMenuRight;
            @MenuRight.canceled -= instance.OnMenuRight;
            @MenuDown.started -= instance.OnMenuDown;
            @MenuDown.performed -= instance.OnMenuDown;
            @MenuDown.canceled -= instance.OnMenuDown;
        }

        public void RemoveCallbacks(ICharactercontrolsActions instance)
        {
            if (m_Wrapper.m_CharactercontrolsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharactercontrolsActions instance)
        {
            foreach (var item in m_Wrapper.m_CharactercontrolsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharactercontrolsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharactercontrolsActions @Charactercontrols => new CharactercontrolsActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Navigation;
    private readonly InputAction m_UI_Submit;
    public struct UIActions
    {
        private @Playercontroller m_Wrapper;
        public UIActions(@Playercontroller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigation => m_Wrapper.m_UI_Navigation;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Navigation.started += instance.OnNavigation;
            @Navigation.performed += instance.OnNavigation;
            @Navigation.canceled += instance.OnNavigation;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Navigation.started -= instance.OnNavigation;
            @Navigation.performed -= instance.OnNavigation;
            @Navigation.canceled -= instance.OnNavigation;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface ICharactercontrolsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnDrink(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnScream(InputAction.CallbackContext context);
        void OnPuase(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnEquip(InputAction.CallbackContext context);
        void OnUnEquip(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnMenuUp(InputAction.CallbackContext context);
        void OnMenuLeft(InputAction.CallbackContext context);
        void OnMenuRight(InputAction.CallbackContext context);
        void OnMenuDown(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigation(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
    }
}
